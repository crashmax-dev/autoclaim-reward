// ==UserScript==
// @name        autoclaim-reward
// @version     0.0.1
// @license     MIT
// @homepage    https://crashmax-dev.github.io/autoclaim-reward/
// @match       https://www.twitch.tv/popout/*
// @updateURL   https://crashmax-dev.github.io/autoclaim-reward/autoclaim-reward.meta.js
// @downloadURL https://crashmax-dev.github.io/autoclaim-reward/autoclaim-reward.user.js
// ==/UserScript==

var l=(e,s,o)=>{if(!s.has(e))throw TypeError("Cannot "+o)},a=(e,s,o)=>(l(e,s,"read from private field"),o?o.call(e):s.get(e)),f=(e,s,o)=>{if(s.has(e))throw TypeError("Cannot add the same private member more than once");s instanceof WeakSet?s.add(e):s.set(e,o)},p=(e,s,o,h)=>(l(e,s,"write to private field"),h?h.call(e,o):s.set(e,o),o);(function(){var e;async function s(){return new Promise(d=>{document.readyState=="loading"?document.addEventListener("DOMContentLoaded",()=>d(),{once:!0}):d()})}function o(d,t,n){const r=new MutationObserver((i,c)=>{for(const v of i)t(v,c)});return r.observe(d,{childList:!0,subtree:!0,...n}),r}class h{constructor(){f(this,e,{})}on(t,n){const r=a(this,e)[t];return r?r.push(n):a(this,e)[t]=[n],this}addListener(t,n){return this.on(t,n)}once(t,n){const r=(...i)=>{this.off(t,r),n(...i)};return this.on(t,r),this}emit(t,...n){const r=a(this,e)[t]||[];for(let i=0;i<r.length;i++)r[i](...n);return Boolean(r.length)}off(t,n){return a(this,e)[t]&&(a(this,e)[t]=a(this,e)[t].filter(r=>r!==n)),this}removeListener(t,n){return this.off(t,n)}removeAllListeners(t){return t?delete a(this,e)[t]:p(this,e,{}),this}eventNames(){return Reflect.ownKeys(a(this,e))}listeners(t){return a(this,e)[t]}listenerCount(t){var n,r;return(r=(n=a(this,e)[t])==null?void 0:n.length)!=null?r:0}}e=new WeakMap;class u extends h{constructor(){super();const{history:t,location:n}=window,{pushState:r,replaceState:i}=t;t.pushState=(...c)=>{r.apply(t,c),this.emit("pushState",n,c[0])},t.replaceState=(...c)=>{i.apply(t,c),this.emit("replaceState",n,c[0])},window.addEventListener("popstate",({state:c})=>{this.emit("popState",n,c)})}}new u,s().then(m);async function m(){o(document.body,(d,t)=>{var n;for(const r of d.addedNodes){const i=(n=r.querySelector('div[data-test-selector="community-points-summary"]'))==null?void 0:n.querySelector("button");i&&(i.addEventListener("click",()=>{}),t.disconnect())}})}})();
